on: workflow_dispatch

permissions: write-all

jobs:
  cp_beta:
    name: cp_beta
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - name: Checkout Flutter Beta
        uses: actions/checkout@v4
        with:
          ref: beta
          repository: flutter/flutter
          token: ${{ github.token }}
      - name: Read Beta Candidate Name
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./bin/internal/release-candidate-branch.version
      - name: Echo Beta Branch
        # for some reasons https://stackoverflow.com/questions/57968497 doesn't work
        run: |
          echo "${{ steps.version.outputs.content }}"
          echo "BETA_BRANCH=${{ steps.version.outputs.content }}" >> $GITHUB_ENV
      # i need to trim the ending newline
      - name: Verify Beta Branch
        run: |
          echo "BETA_BRANCH=$(echo $BETA_BRANCH | tr -d '\n')" >> $GITHUB_ENV
          echo $BETA_BRANCH
      - name: Get Approver
        run: |
          RAW_APPROVERS=$(gh pr view --json reviews -q ".reviews[] | select(.state == \"APPROVED\") | .author.login" -R flutter/flutter 136658 --comments)
          echo "APPROVERS=$(echo $RAW_APPROVERS | sed 's/ /,/g')" >> $GITHUB_ENV
          echo $APPROVERS
        env:
          GITHUB_TOKEN: ${{ github.token }}
      # echo "GITHUB_SHA=${{ github.event.pull_request.merge_commit_sha }}" >> $GITHUB_ENV
      - name: Store Merged Sha
        run: |
          echo "${{ github.event.pull_request.merge_commit_sha }}"
          echo "GITHUB_SHA='41bf4015eed52493be8ef115e5886bf5b275070a'" >> $GITHUB_ENV
      - name: Verify Approver
        run: |
          echo $APPROVERS
      - name: Checkout Flutter master
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master
          token: ${{ github.token }}
      # TODO(xilaizhang): Add a step if auto cherry-pick fails, and hint author to resolve conflict.
      - name: git
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git checkout -b ${BETA_BRANCH} --track origin/${BETA_BRANCH}
          git cherry-pick ${GITHUB_SHA}
          git reset origin/${BETA_BRANCH}
          git add README.md
          git push -u origin "${BETA_BRANCH}"
          gh pr create --title "totally testing" --body "cc@XilaiZhang"
        env:
          GITHUB_TOKEN: ${{ github.token }}
