on: workflow_dispatch

# TODO: the bot on dart should have permission to open PR on flutter/engine.

jobs:
  roll-engine:
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout flutter/flutter Repo
        uses: actions/checkout@v4
        with:
          ref: beta
          repository: flutter/flutter
          token: ${{ github.token }}
      - name: Read Beta Candidate Name
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./bin/internal/release-candidate-branch.version
      - name: Set Beta Branch
        run: |
          echo "BETA_BRANCH=${{ steps.version.outputs.content }}" >> $GITHUB_ENV
      - name: Trim Ending newline
        run: |
          echo "BETA_BRANCH=$(echo $BETA_BRANCH | tr -d '\n')" >> $GITHUB_ENV
      - name: print github env
        env:
          GITHUB_ENV: ${{ toJson(github.env) }}
        run: echo "$GITHUB_ENV"
      # Note: flutter/engine doesn't have a beta branch.
      # Use ${{ env.BETA_BRANCH }} and not {{ github.env.BETA_BRANCH }}.
      # The fork repo (XilaiZhang/engine) is always up to date with flutter/engine, due to a separate workflow
      # https://github.com/XilaiZhang/engine/blob/main/.github/workflows/sync-beta.yml
      - name: Checkout XilaiZhang/engine Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BETA_BRANCH }}
          repository: XilaiZhang/engine
          token: ${{ github.token }}
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
      # Don't export path, add it through env variable.
      - name: Set up gclient
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /tmp/depot_tools
          echo "/tmp/depot_tools" >> $GITHUB_PATH
          git config user.name "XilaiZhang"
          git config user.email "xilaizhang@g.ucla.edu"
          git config core.autocrlf false
          git config core.filemode false
      - name: Setup Gclient Config File
        run : |
          echo 'solutions = ['                                               >> .gclient
          echo '  {'                                                         >> .gclient
          echo '    "managed": False,'                                       >> .gclient
          echo '    "name": "src/flutter",'                                  >> .gclient
          echo '    "url": "git@github.com:XilaiZhang/engine.git",'          >> .gclient
          echo '    "custom_deps": {},'                                      >> .gclient
          echo '    "deps_file": "DEPS",'                                    >> .gclient
          echo '    "safesync_url": "",'                                     >> .gclient
          echo '  },'                                                        >> .gclient
          echo ']'                                                           >> .gclient
      # https://github.com/flutter/flutter/wiki/Setting-up-the-Engine-development-environment
      - name: Gclient sync
        run: |
          gclient sync
          cd src/flutter
          git remote add upstream git@github.com:flutter/engine.git
          git remote rm origin
          git remote add origin git@github.com:XilaiZhang/engine.git
      # Engine license script requires SDK version >=3.2.0-0 <4.0.0.
      # The highest on stable only goes to 3.1.4.
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: beta
      # https://docs.github.com/en/webhooks/webhook-events-and-payloads#push
      # github.event.after has the latest dart hash.
      - name: Store Dart Hash
        run: |
          echo "DART_HASH=AFTER_HASH_PLACEHOLDER" >> $GITHUB_ENV
          echo "PREV_HASH=668bef34e453fc84ab9fa572d917110b51fa88eb" >> $GITHUB_ENV
      - name: Create Feature Branch
        run: |
          git remote -v
          git checkout -b roll-dart-${DART_HASH} --track origin/${BETA_BRANCH}
          git status
      # Do not grep the old hash. Grep returns exit code 1 and stops the program if no match.
      - name: Update Dart Hash
        run: |
          curl -o replace-hash.dart https://raw.githubusercontent.com/XilaiZhang/miscellaneous-side-project/master/.github/workflows/replace-hash.dart
          dart run replace-hash.dart $DART_HASH DEPS
          cat DEPS | grep 'dart_revision'
      # https://github.com/flutter/engine/tree/main/tools/licenses
      # Note: run gclient before version resolving.
      - name: Run license script
        run: |
          pwd
          ls
          cd tools/licenses
          dart pub get
          rm -rf ../../../out/licenses
          dart --enable-asserts lib/main.dart --src ../../.. --out ../../../out/licenses --golden ../../ci/licenses_golden
      - name: Inspect License content change
        run: |
          cp ../../../out/licenses/* ../../ci/licenses_golden
          git diff
      - name: Create Engine PR
        run: |
          git --version
          git checkout -b roll-dart-${DART_HASH} --track origin/${BETA_BRANCH}
          git status
          git add .
          git status
          git commit -m "roll dart to ${DART_HASH}"
          git status
          git push -u origin roll-dart-${DART_HASH}
          gh pr create --title "[test PR for github actions]roll dart hash to ${DART_HASH}" --body "cc @XilaiZhang"
        env:
          GITHUB_TOKEN: ${{ github.token }}


