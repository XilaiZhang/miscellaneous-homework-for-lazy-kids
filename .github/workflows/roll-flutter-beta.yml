on: workflow_dispatch

# TODO: the bot on dart should have permission to open PR on flutter/engine.

jobs:
  roll-engine:
    runs-on: ubuntu-latest 
    steps:
      # TODO(xilaizhang): install private key on dart sdk github.
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      # Use curl instead of checkout to save disk space.
      # disk space usage is gigantic on this workflow due to gclient sync.
      - name: Get Beta Branch
        run: |
          curl -o beta.json https://raw.githubusercontent.com/flutter/flutter/beta/bin/internal/release-candidate-branch.version
          echo "BETA_BRANCH=$(cat beta.json | tr -d '\n')" >> $GITHUB_ENV
      - name: Print Github Env
        env:
          GITHUB_ENV: ${{ toJson(github.env) }}
        run: echo "$GITHUB_ENV"
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
      # Don't export path, add it through env variable.
      - name: Install gclient
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git /tmp/depot_tools
          echo "/tmp/depot_tools" >> $GITHUB_PATH
      # Note: flutter/engine doesn't have a beta branch.
      # Use ${{ env.BETA_BRANCH }} and not {{ github.env.BETA_BRANCH }} to reference engine beta.
      - name: Create Engine Folder
        run: |
          mkdir engine
      # Note: sync to flutter/engine in gclient. Syncing to a fork will cause license script to not find pattern.
      # Pattern not found errors such as https://paste.googleplex.com/6295542081519616.
      - name: Setup Gclient Config File
        working-directory: ./engine
        run : |
          echo 'solutions = ['                                                              >> .gclient
          echo '  {'                                                                        >> .gclient
          echo '    "managed": False,'                                                      >> .gclient
          echo '    "name": "src/flutter",'                                                 >> .gclient
          echo "    \"url\": \"git@github.com:flutter/engine.git@origin/${BETA_BRANCH}\","  >> .gclient
          echo '    "custom_deps": {},'                                                     >> .gclient
          echo '    "deps_file": "DEPS",'                                                   >> .gclient
          echo '    "safesync_url": "",'                                                    >> .gclient
          echo '  },'                                                                       >> .gclient
          echo ']'                                                                          >> .gclient
      # https://github.com/flutter/flutter/wiki/Setting-up-the-Engine-development-environment
      - name: Gclient sync
        working-directory: ./engine
        run: |
          pwd
          ls
          gclient sync --no-history
          cd src/flutter
          git remote add upstream git@github.com:flutter/engine.git
          git remote rm origin
          git remote add origin git@github.com:XilaiZhang/engine.git
      # Remove list of paths which don't have license
      # Keep the paths which license script depends on, and flutter/tool.
      # Keep third_party/skia/bazel due to symlink references third_party/skia/bazel/external/fontations/Cargo.toml
      # TODO(xilaizhang): further remove more things in case we hit space limit in the future.
      - name: Remove Paths to Skip
        working-directory: ./engine/src
        run: |
          curl -o skip_path.txt https://raw.githubusercontent.com/XilaiZhang/miscellaneous-side-project/master/.github/workflows/skip_path.txt
          while read line; do
            skip_path=$(echo "$line" | sed -e 's/\n$//')
            rm -rf $skip_path
          done < skip_path.txt
          ls
      # Remove directories that aren't related to license
      # - name: Remove Directories to Skip
      #   working-directory: ./engine
      #   run: |
      #     curl -o skip_dir.txt https://raw.githubusercontent.com/XilaiZhang/miscellaneous-side-project/master/.github/workflows/skip_dir.txt
      #     while read line; do
      #       skip_dir=$(echo "$line" | sed -e 's/\n$//')
      #       find . -type d -name "$B" -exec rm -rf {} \;
      #     done < skip_dir.txt
      # Engine license script requires SDK version >=3.2.0-0 <4.0.0.
      # The highest on stable only goes to 3.1.4.
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: beta
      # https://docs.github.com/en/webhooks/webhook-events-and-payloads#push
      # github.event.after has the latest dart hash.
      # TODO(xilaizhang): replace dart hash with real dart hash.
      - name: Store Dart Hash
        run: |
          echo "DART_HASH=620c172167c07c66324778ce4122b4119abebcca" >> $GITHUB_ENV
      # This is needed for license script to work.
      - name: Remove untracked files
        working-directory: ./engine/src/flutter
        run: |
          git clean -n -d -X
          git clean -f -d -X
          git status
      # Stash the files we deleted to save disk space.
      - name: Remove untracked files src
        working-directory: ./engine/src
        run: |
          git clean -n -d -X
          git clean -f -d -X
          git status
          git stash
          git status
      # https://stackoverflow.com/questions/58139175/running-actions-in-another-directory
      # Specify the working directory of a step, otherwise it runs from root directory.
      # Note: track the remote branch instead of the fork.
      - name: Create Feature Branch
        working-directory: ./engine/src/flutter
        run: |
          git remote -v
          git fetch --all
          git checkout -b roll-dart-${DART_HASH} --track upstream/${BETA_BRANCH}
          git status
      # Do not grep the old hash. Grep returns exit code 1 and stops the program if no match.
      - name: Update Dart Hash
        working-directory: ./engine/src/flutter
        run: |
          curl -o replace-hash.dart https://raw.githubusercontent.com/XilaiZhang/miscellaneous-side-project/master/.github/workflows/replace-hash.dart
          dart run replace-hash.dart $DART_HASH DEPS
          cat DEPS | grep 'dart_revision'
          git add DEPS
          git status
      # https://github.com/flutter/engine/tree/main/tools/licenses
      # Note: run gclient before version resolving.
      - name: Run license script
        working-directory: ./engine/src/flutter/tools/licenses
        run: |
          pwd
          ls
          dart pub get
          /tmp/depot_tools/gclient sync -D
          rm -rf ../../../out/licenses
          dart --enable-asserts lib/main.dart --src ../../.. --out ../../../out/licenses --golden ../../ci/licenses_golden
      - name: Inspect License content change
        working-directory: ./engine/src/flutter/tools/licenses
        run: |
          cp ../../../out/licenses/* ../../ci/licenses_golden
          git diff
      - name: Create Engine PR
        working-directory: ./engine/src/flutter
        run: |
          git --version
          git branch
          git status
          git add .
          git status
          git commit -m "roll dart to ${DART_HASH}"
          git status
          git push -u origin roll-dart-${DART_HASH}
          gh pr create --title "[test PR for github actions]roll dart hash to ${DART_HASH}" --body "cc @XilaiZhang"
        env:
          GITHUB_TOKEN: ${{ github.token }}


