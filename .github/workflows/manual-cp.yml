on: 
  workflow_dispatch:
    inputs:
      repo:
        description: 'repository where the cherry pick happens. e.g. framework, engine'     
        required: true
      main_branch:
        description: 'branch that already contains the cherry pick commit'     
        required: true
      cp_branch:
        description: 'branch that lacks the cherry pick commit'     
        required: true
      cp_commit:
        description: 'commit to cherry pick'     
        required: true

jobs:
  cp-among-flutter-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          repository: flutter/${{ github.event.inputs.repo }}
          token: ${{ github.token }}
          fetch-depth: 0
      - name: Create cp body template
        run : |
          CP_TEMPLATE="**What is this PR?**<br>"
          CP_TEMPLATE+="This is a pull request that cherry picks ${{ github.event.inputs.cp_commit }} into ${{ github.event.inputs.cp_branch }}.<br><br>"
          CP_TEMPLATE+="**Why this PR?**<br>"
          CP_TEMPLATE+="Someone has triggered a cherry pick workflow.<br><br>"
          CP_TEMPLATE+="**Have Questions?**<br>"
          CP_TEMPLATE+="Open an issue for team-release, or ping @flutter-release-eng<br><br>"
          echo "CP_TEMPLATE=${CP_TEMPLATE}" >> $GITHUB_ENV
      - name: Create cp template when merge conflict
        run : |
          CP_WARNING="**Note: There was an error when cherry picking the intial pull request**<br>"
          CP_WARNING+="**This is a forced cherry pick. This PR is generated by accepting theirs.**<br>"
          CP_WARNING+="**If this PR doesn't look right, please manually resolve the conflicts.**<br><br>"
          CP_WARNING="${CP_TEMPLATE}${CP_WARNING}"
          echo "CP_WARNING=${CP_WARNING}" >> $GITHUB_ENV
      # use same name when checking out branch, since the marketplace action does a hard reset.
      - name: Non Force CP
        id: cp-non-force
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git checkout -b ${{ github.event.inputs.cp_branch }} --track origin/${{ github.event.inputs.cp_branch }}
          git cherry-pick ${{ github.event.inputs.cp_commit }}
          git status
      - name: Create PR on CP success
        if: ${{ steps.cp-non-force.conclusion == 'success' }}
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        with:
          token: ${{ secrets.PAT }}
          commit-message: CP without merge conflict
          committer: GitHub <noreply@github.com>
          title: 'Cherry pick ${{ github.event.inputs.cp_commit }} without merge conflict'
          body: |
            ${{ env.CP_TEMPLATE }}
      - name: Force CP
        if: ${{ steps.cp-non-force.conclusion == 'failure' }}
        id: cp-force
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git checkout -b ${{ github.event.inputs.cp_branch }} --track origin/${{ github.event.inputs.cp_branch }}
          git cherry-pick -Xtheirs ${{ github.event.inputs.cp_commit }}
          git status
      - name: Create PR on CP force
        if: ${{ steps.cp-force.conclusion == 'success' }}
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38
        with:
          token: ${{ secrets.PAT }}
          commit-message: force CP when merge conflict
          committer: GitHub <noreply@github.com>
          title: 'Force Cherry pick ${{ github.event.inputs.cp_commit }} when merge conflict'
          body: |
            ${{ env.CP_WARNING }}
 
